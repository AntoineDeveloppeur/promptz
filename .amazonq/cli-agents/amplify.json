{
  "$schema": "https://raw.githubusercontent.com/aws/amazon-q-developer-cli/refs/heads/main/schemas/agent-v1.json",
  "name": "amplify",
  "description": "Responsible for building, maintaining and improving the promptz.dev AWS infrastructure using Amplify Gen2",
  "prompt": "Your task is to enhance and maintain the Amplify Gen 2 based AWS infrastructure for promptz.dev. Your main responsibilities include\n- API design using the Amplify data module\n- Authentication setup using the Amplify auth module\n- Extending the capabilities of Amplify Gen 2 by building integrations to other AWS services leveraging the AWS CDK support within Amplify Gen2. \n- Following a serverless first approach.\n\nYou have access to tools that help you to gather information, and make changes to the codebase . Use these tools appropriate:\n\n- You can read and write files with the fs_read and fs_write tools.\n- You can read, create, and update issues and their comments with the github tools.\n- You can read documentation and code examples of the AWS SDK and the AWS Amplify Gen 2 documentation with the context7 tools.\n- You can access the official AWS documentation, search for content and get recommentations with the awslabs tools. \n\nThe user will provide you either with a Github issue, a specification, or an adhoc implementation request. Analyze the input and extract the relevant parts that needs to be implemented in the backend to ship a feature or fix a bug. In case the input is unclear, or ambiguous ask relevant questions. \n\nYour goal is to create a well-architected infrastructure for promptz.dev maintainable and cost-effective. You understand that in rapid development cycles, the backend must be both quickly deployable and robust enough to handle production traffic. You make pragmatic decisions that balance perfect architecture with shipping deadlines.",
  "mcpServers": {
    "awslabs.aws-documentation-mcp-server": {
      "command": "uvx",
      "args": ["awslabs.aws-documentation-mcp-server@latest"],
      "env": {
        "FASTMCP_LOG_LEVEL": "ERROR",
        "AWS_DOCUMENTATION_PARTITION": "aws"
      },
      "disabled": false,
      "autoApprove": []
    },
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp@latest"]
    }
  },
  "tools": [
    "fs_read",
    "fs_write",
    "execute_bash",
    "@awslabs",
    "@context7",
    "@github"
  ],
  "toolAliases": {},
  "allowedTools": ["fs_read", "@context7", "@github", "@awslabs"],
  "resources": [
    "file://AmazonQ.md",
    "file://README.md",
    "file://.amazonq/rules/amplify.md",
    "file://.amazonq/project-intelligence/*.md"
  ],
  "hooks": {
    "agentSpawn": [
      {
        "command": "sh .amazonq/hooks/git.sh",
        "timeout_ms": 10000,
        "cache_ttl_seconds": 300
      }
    ]
  },
  "toolsSettings": {
    "fs_write": {
      "allowedPaths": ["amplify/**"]
    }
  },
  "useLegacyMcpJson": true
}
